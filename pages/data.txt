// before function return

interface todo {
  title : string,
  publishedAt : string,
  author : string ,
  url : string,
  content : string,
  urlToImage : string
}
export const getStaticProps : GetStaticProps  = async () => {
  const apiUrl  = "https://newsapi.org/v2/everything?q=keyword&apiKey=3a3805f7bd9e4fa6a8a41aba22cc824d";
  const todolist  = await axios.get(apiUrl);
  const to  : todo[]  = todolist.data.articles ;
  if(!to) {
    return {
      notFound: true,
    };
  }
  return {
    props : {to},
  };
}


// in the function
{to} : {to:todo[]}


// map in div
{
        to.map((total: todo,index)=> {
             return (
              <div className="testdiv" key= {index}> 
             <div className="news-divtwo">
               <h2 className="content-area">{total.title.substr(0,50)}</h2>
               <p  className="content-area">Published date : {total.publishedAt}</p>
               <p  className="content-area">Author : {total.author}</p>
               <p  className="content-area">{total.content.substr(0,200)}</p>
               <p style={{    textAlign: "center",marginBottom:"20px"}}> <button  className="card-button"><a href = {total.url}>Read Full Article</a></button></p>
             </div>
           </div>
          );
        })
      }


//full file


import Link from "next/link";
import Image from "next/image";
import axios from "axios";
import { GetStaticProps } from "next";
interface todo {
  title : string,
  publishedAt : string,
  author : string ,
  url : string,
  content : string,
  urlToImage : string
}
export const getStaticProps : GetStaticProps  = async () => {
  const apiUrl  = "https://newsapi.org/v2/everything?q=keyword&apiKey=3a3805f7bd9e4fa6a8a41aba22cc824d";
  const todolist  = await axios.get(apiUrl);
  const to  : todo[]  = todolist.data.articles ;
  if(!to) {
    return {
      notFound: true,
    };
  }
  return {
    props : {to},
  };
}
const Home = ({to} : {to:todo[]}) => {
  const logo1 = "News";
  const logo2 = "เคนเคต";

  return (
      <div className="header">
        {/* <div className="right"><div className="rightnav"><Menu></Menu></div></div> */}
        <div className="parent">
      <div className="test">
      {
        to.map((total: todo,index)=> {
             return (
              <div className="testdiv" key= {index}> 
             <div className="news-divtwo">
               <h2 className="content-area">{total.title.substr(0,50)}</h2>
               <p  className="content-area">Published date : {total.publishedAt}</p>
               <p  className="content-area">Author : {total.author}</p>
               <p  className="content-area">{total.content.substr(0,200)}</p>
               <p style={{    textAlign: "center",marginBottom:"20px"}}> <button  className="card-button"><a href = {total.url}>Read Full Article</a></button></p>
             </div>
           </div>
             );
        })
      }
    </div>
      </div> </div>
  );
};
export default Home;





//full file index code
import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import axios from "axios";
import { GetStaticProps } from "next";

const inter = Inter({ subsets: ["latin"] });
interface todo {
  title: string;
  publishedAt: string;
  author: string;
  url: string;
  content: string;
  urlToImage: string;
}
export const getStaticProps: GetStaticProps = async () => {
  const apiUrl =
    "https://newsapi.org/v2/everything?q=keyword&apiKey=3a3805f7bd9e4fa6a8a41aba22cc824d";
  const todolist = await axios.get(apiUrl);
  const to: todo[] = todolist.data.articles;
  if (!to) {
    return {
      notFound: true,
    };
  }
  return {
    props: { to },
  };
};

export default function Home({ to }: { to: todo[] }) {
  return (
    <>
      <Head>
        <title>News App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.description}>
          <h1 className={styles.thirteen}>News For You&nbsp;</h1>
        </div>

        <div className={styles.center}></div>

        <div className={styles.grid}>
          {to.map((total: todo, index) => {
            return (
              <div className="testdiv" key={index}>
                {/* <div className="news-divtwo">
                  <h2 className="content-area">{total.title.substr(0, 50)}</h2>
                  <p className="content-area">
                    Published date : {total.publishedAt}
                  </p>
                  <p className="content-area">Author : {total.author}</p>
                  <p className="content-area">{total.content.substr(0, 200)}</p>
                  <p style={{ textAlign: "center", marginBottom: "20px" }}>
                    {" "}
                    <button className="card-button">
                      <a href={total.url}>Read Full Article</a>
                    </button>
                  </p>
                </div> */}
                <a
                  href="https://nextjs.org/docs?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
                  className={styles.card}
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  <h2 className={inter.className}>
                    Docs <span>-&gt;</span>
                  </h2>
                  <p className={inter.className}>
                    Find in-depth information about Next.js features
                    and&nbsp;API.
                  </p>
                </a>
              </div>
            );
          })}
          <a
            href="https://nextjs.org/docs?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Docs <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Find in-depth information about Next.js features and&nbsp;API.
            </p>
          </a>
          <a
            href="https://nextjs.org/docs?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Docs <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Find in-depth information about Next.js features and&nbsp;API.
            </p>
          </a>

          <a
            href="https://nextjs.org/learn?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Learn <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Learn about Next.js in an interactive course with&nbsp;quizzes!
            </p>
          </a>

          <a
            href="https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Templates <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Discover and deploy boilerplate example Next.js&nbsp;projects.
            </p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Deploy <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Instantly deploy your Next.js site to a shareable URL
              with&nbsp;Vercel.
            </p>
          </a>
        </div>
      </main>
    </>
  );
}




// css
.main {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  padding: 6rem;
  min-height: 100vh;
}

.description {
  display: inherit;
  justify-content: inherit;
  align-items: inherit;
  font-size: 0.85rem;
  max-width: var(--max-width);
  width: 100%;
  z-index: 2;
  font-family: var(--font-mono);
}

.description a {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.5rem;
}

.description p {
  position: relative;
  margin: 0;
  padding: 1rem;
  background-color: rgba(var(--callout-rgb), 0.5);
  border: 1px solid rgba(var(--callout-border-rgb), 0.3);
  border-radius: var(--border-radius);
}

.code {
  font-weight: 700;
  font-family: var(--font-mono);
}

.grid {
  display: grid;
  grid-template-columns:repeat(4, minmax(25%, auto)) ;
  width: var(--max-width);
  max-width: 100%;
}

.card {
  padding: 1rem 1.2rem;
  border-radius: var(--border-radius);
  background: rgba(var(--card-rgb), 0);
  border: 1px solid rgba(var(--card-border-rgb), 0);
  transition: background 200ms, border 200ms;
}

.card span {
  display: inline-block;
  transition: transform 200ms;
}

.card h2 {
  font-weight: 600;
  margin-bottom: 0.7rem;
}

.card p {
  margin: 0;
  opacity: 0.6;
  font-size: 0.9rem;
  line-height: 1.5;
  max-width: 30ch;
}

.center {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  padding: 4rem 0;
}

.center::before {
  background: var(--secondary-glow);
  border-radius: 50%;
  width: 480px;
  height: 360px;
  margin-left: -400px;
}

.center::after {
  background: var(--primary-glow);
  width: 240px;
  height: 180px;
  z-index: -1;
}

.center::before,
.center::after {
  content: '';
  left: 50%;
  position: absolute;
  filter: blur(45px);
  transform: translateZ(0);
}

.logo,
.thirteen {
  position: relative;
}

.thirteen {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 75px;
  height: 75px;
  padding: 25px 10px;
  margin-left: 16px;
  transform: translateZ(0);
  border-radius: var(--border-radius);
  overflow: hidden;
  box-shadow: 0px 2px 8px -1px #0000001a;
}

.thirteen::before,
.thirteen::after {
  content: '';
  position: absolute;
  z-index: -1;
}

/* Conic Gradient Animation */
.thirteen::before {
  animation: 6s rotate linear infinite;
  width: 200%;
  height: 200%;
  background: var(--tile-border);
}

/* Inner Square */
.thirteen::after {
  inset: 0;
  padding: 1px;
  border-radius: var(--border-radius);
  background: linear-gradient(
    to bottom right,
    rgba(var(--tile-start-rgb), 1),
    rgba(var(--tile-end-rgb), 1)
  );
  background-clip: content-box;
}

/* Enable hover only on non-touch devices */
@media (hover: hover) and (pointer: fine) {
  .card:hover {
    background: rgba(var(--card-rgb), 0.1);
    border: 1px solid rgba(var(--card-border-rgb), 0.15);
  }

  .card:hover span {
    transform: translateX(4px);
  }
}

@media (prefers-reduced-motion) {
  .thirteen::before {
    animation: none;
  }

  .card:hover span {
    transform: none;
  }
}

/* Mobile */
@media (max-width: 700px) {
  .content {
    padding: 4rem;
  }

  .grid {
    grid-template-columns: 1fr;
    margin-bottom: 120px;
    max-width: 320px;
    text-align: center;
  }

  .card {
    padding: 1rem 2.5rem;
  }

  .card h2 {
    margin-bottom: 0.5rem;
  }

  .center {
    padding: 8rem 0 6rem;
  }

  .center::before {
    transform: none;
    height: 300px;
  }

  .description {
    font-size: 0.8rem;
  }

  .description a {
    padding: 1rem;
  }

  .description p,
  .description div {
    display: flex;
    justify-content: center;
    position: fixed;
    width: 100%;