import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import axios from "axios";
import { GetStaticProps } from "next";
import Image from "next/image";
import { useEffect, useState } from "react";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import {
  faCalendarAlt,
  faSearch,
  faUser,
} from "@fortawesome/free-solid-svg-icons";
import { config } from "@fortawesome/fontawesome-svg-core";
config.autoAddCss = false;

const inter = Inter({ subsets: ["latin"] });
interface todo {
  title: string;
  publishedAt: string;
  author: string;
  url: string;
  content: string;
  urlToImage: string;
  description: string;
}
export const getStaticProps: GetStaticProps = async () => {
  const category = "general";
  const apiKey = "3a3805f7bd9e4fa6a8a41aba22cc824d";
  // general category
  const apiUrlgeneral = `https://newsapi.org/v2/everything?q=keyword&apiKey=${apiKey}&00`;
  const todolist = await axios.get(apiUrlgeneral);
  const general: todo[] = todolist.data.articles;

  // technology category
  const apiUrltech = `https://newsapi.org/v2/top-headlines?category=technology&country=in&pageSize=100&apiKey=${apiKey}`;
  const techlist = await axios.get(apiUrltech);
  const technology: todo[] = techlist.data.articles;

  // entertainment
  const apiUrlenter = `https://newsapi.org/v2/top-headlines?category=entertainment&country=in&pageSize=100&apiKey=${apiKey}`;
  const enterlist = await axios.get(apiUrlenter);
  const entertainment: todo[] = enterlist.data.articles;

  // science
  const apiUrlscience = `https://newsapi.org/v2/top-headlines?category=science&country=in&pageSize=100&apiKey=${apiKey}`;
  const sciencelist = await axios.get(apiUrlscience);
  const science: todo[] = sciencelist.data.articles;

  // education
  const apiUrlbus = `https://newsapi.org/v2/top-headlines?category=politics&country=in&pageSize=100&apiKey=${apiKey}`;
  const buslist = await axios.get(apiUrlbus);
  const business: todo[] = buslist.data.articles;

  // health
  const apiUrlhel = `https://newsapi.org/v2/top-headlines?category=health&country=in&pageSize=100&apiKey=${apiKey}`;
  const hellist = await axios.get(apiUrlhel);
  const health: todo[] = hellist.data.articles;

  const full_data: Array<todo[]> = [
    general,
    technology,
    entertainment,
    science,
    business,
    health,
  ];
  // console.log(technology);
  // console.log(to);

  if (!general || !technology) {
    return {
      notFound: true,
    };
  }
  return {
    props: { full_data },
  };
};

export default function Home({ full_data }: { full_data: Array<todo[]> }) {
  const [value, setValue] = useState(0);
  const [i, seti] = useState(12);
  const handelLoadMore = () => {
    if (full_data[value].length < i + 12) {
      seti(full_data[value].length);
    } else seti(i + 12);
  };
  const [searchText,setSearchText] =useState("");
  const [showSearchText,setShowSearchText] =useState(false);
  const categoryDefault = `0px 2px 8px -1px #0000001a`;
  const categorySelected = `0 0 10px grey`;
  const onFormSubmit = () => { (event:any )=>setShowSearchText(true)};
  const searchInput =(e:any) => {
    setSearchText(e.target.value);
  }
  const months = [
    "Jan",
    "Feb",
    "Mar",
    "April",
    "May",
    "June",
    "July",
    "Aug",
    "Sept",
    "Nov",
    "Dec",
  ];

  return (
    <>
      <Head>
        <title>News App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.description}>
          <h1 className={styles.thirteen}>News For You</h1>
          {/* <h1 className={styles.thirteen}>
            <form  onSubmit={onFormSubmit} className={styles.iconDiv}>
              {" "}
              <input
                aria-label="hi"
                type="text"
                placeholder="Search"
                name=""
                id=""
                onChange={searchInput}
              ></input>
              <button type="submit">
              <FontAwesomeIcon
                onClick={() => {}}
                icon={faSearch}
                className={styles.icon}
              ></FontAwesomeIcon></button>
            </form>
          </h1> */}
        </div>
        {
          <div className={styles.cat}>
            {/* {showSearchText ? <div>{searchText}</div> : <div>false</div>} */}
            
            <button
              className={styles.thirteen}
              onClick={() => {
                setValue(0);
              }}
              style={{
                boxShadow: value === 0 ? categorySelected : categoryDefault,
              }}
            >
              All News
            </button>
            <button
              className={styles.thirteen}
              onClick={() => {
                setValue(1);
              }}
              style={{
                boxShadow: value === 1 ? categorySelected : categoryDefault,
              }}
            >
              {" "}
              Technology{" "}
            </button>
            <button
              className={styles.thirteen}
              onClick={() => {
                setValue(2);
              }}
              style={{
                boxShadow: value === 2 ? categorySelected : categoryDefault,
              }}
            >
              {" "}
              Entertainment{" "}
            </button>
            <button
              className={styles.thirteen}
              onClick={() => {
                setValue(3);
              }}
              style={{
                boxShadow: value === 3 ? categorySelected : categoryDefault,
              }}
            >
              {" "}
              Science{" "}
            </button>
            <button
              className={styles.thirteen}
              onClick={() => {
                setValue(4);
              }}
              style={{
                boxShadow: value === 4 ? categorySelected : categoryDefault,
              }}
            >
              {" "}
              Business{" "}
            </button>
            <button
              className={styles.thirteen}
              onClick={() => {
                setValue(5);
              }}
              style={{
                boxShadow: value === 5 ? categorySelected : categoryDefault,
              }}
            >
              {" "}
              Health
            </button>
          </div>
        }
        <div className={styles.grid}>
          {full_data[value] &&
            full_data[value].slice(0, i).map((total: todo, index) => {
              return (
                <div className={styles.card} key={index}>
                  {/* <div className="news-divtwo">
                    <h2 className="content-area">{total.title.substr(0, 50)}</h2>
                    <p className="content-area">
                      Published date : {total.publishedAt}
                    </p>
                    <p className="content-area">Author : {total.author}</p>
                    <p className="content-area">{total.content.substr(0, 200)}</p>
                    <p style={{ textAlign: "center", marginBottom: "20px" }}>
                      {" "}
                      <button className="card-button">
                        <a href={total.url}>Read Full Article</a>
                      </button>
                    </p>
                  </div> */}
                  <a
                    href={total.url}
                    target="_blank"
                    rel="noopener noreferrer"
                    key={index}
                  >
                    <div className={styles.imgDiv}>
                      {total.urlToImage ? (
                        <Image
                          unoptimized
                          className="ima"
                          src={total.urlToImage}
                          alt="Not Available"
                          width={100}
                          height={20}
                        />
                      ) : (
                        <Image
                          unoptimized
                          className="ima"
                          src="https://t4.ftcdn.net/jpg/03/37/92/49/360_F_337924964_fF6I0iZkv9lvoIEn71f0OsgawArIPPDu.webp"
                          alt="Not Available"
                          width={100}
                          height={20}
                        />
                      )}
                    </div>
                    <div className={styles.publishDate}>
                      <FontAwesomeIcon
                        icon={faCalendarAlt}
                        className={styles.icon}
                      ></FontAwesomeIcon>{" "}
                      &nbsp;{months[parseInt(total.publishedAt.substr(5, 2))-1]}{" "}
                      {total.publishedAt.substr(8, 2)}{" "}
                      {total.publishedAt.substr(0, 4)} {/* &nbsp;&nbsp;   */}
                      <div style={{ float: "right" }}>
                        {total.author  && total.author.length<=15? (
                          <FontAwesomeIcon
                            icon={faUser}
                            className={styles.icon}
                          ></FontAwesomeIcon>
                        ) : null}{" "}
                        {total.author  &&total.author.length>15 ? null : total.author}
                      </div>
                    </div>
                    <h2 className={inter.className}>{total.title}</h2>
                    {/* <div>
                      {total.publishedAt}
                    </div> */}
                    <p className={inter.className}>
                      {total.description !== "Comments"
                        ? total.description
                        : total.content.substr(0, 140) + "..."}
                    </p>
                  </a>
                </div>
              );
            })}
        </div>
        {i >= full_data[value].length ? null : (
          <div className={styles.loadMoreDiv}>
            <div className={styles.cat}>
              <button className={styles.thirteen} onClick={handelLoadMore}>
                <h2>Load More...</h2>
              </button>
            </div>
          </div>
        )}
      </main>
      <hr style={{ borderTop: "1px solid #bbb" }}></hr>
      <center>
        <div className={styles.copyright}> &#169; Dipendra Kumar Shah</div>
      </center>
    </>
  );
}
